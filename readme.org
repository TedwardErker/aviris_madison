#+TITLE: Madison AVIRIS
#+AUTHOR: Tedward Erker
#+email: erker@wisc.edu
#+PROPERTY:  header-args:R :cache no :results output :exports both :comments link :session *R:uft*
#+startup: indent

* Moving Madison AVIRIS Imagery from Serak to here
** Madison AVIRIS and AVIRIS-NG Imagery
*** Copy imagery from serak to my machine

**** 2011
file:madisonaviris2011.txt

#+BEGIN_SRC sh
for file in $(<madisonaviris2011.txt); do rsync -avz --include "*_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr*" --include "/*" --exclude "*" "erker@serak:/data1/aviris-c/2011/MADISON_WI/$file" /Volumes/data_erker/aviris_madison/2011; done
#+END_SRC


**** 2015


file:madisonaviris2015.txt

Evaluate from terminal because requires password.
#+BEGIN_SRC sh
for file in $(<madisonaviris2015.txt); do rsync -avz "erker@serak:/data1/aviris-ng/L2/2015/$file" /Volumes/data_erker/aviris_madison/2015; done
#+END_SRC

Get Quicklooks
#+BEGIN_SRC sh
for file in $(<madisonaviris2015.txt); do rsync -avz "erker@serak:/data1/aviris-ng/zzL2_quicklooks_shpfiles/2015/$file" /Volumes/data_erker/aviris_madison/2015/quicklooks; done
#+END_SRC

**** 2016

file:madisonaviris2016.txt

Evaluate from terminal because requires password.
#+BEGIN_SRC sh
for file in $(<madisonaviris2016.txt); do rsync -avz "erker@serak:/data1/aviris-ng/L2/2016/$file" /Volumes/data_erker/aviris_madison/2016; done
#+END_SRC

*** assign variables to directory location
#+begin_src R
madison.aviris.dir <- "/Volumes/data_erker/aviris_madison/"
#+end_src

#+RESULTS:

*** 2009
**** kml
/ssh:serak:/data1/aviris-c/KMLs/AVIRIS_Data_2009.kml
**** files dir
#+begin_src R :results none
aviris.2009.dir <- str_c(madison.aviris.dir,"aviris-c/2009/MADISON_WI/")
#+end_src

**** files base
#+begin_src R :results none
aviris.2009.base.names <- c("f090729t01p00r05rdn_b")
#+end_src

**** image paths
#+begin_src R
aviris.2009.image.paths <- str_c(aviris.2009.dir, aviris.2009.base.names, "/", aviris.2009.base.names, "_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr")
aviris.2009.image.paths
#+end_src

#+RESULTS:
: [1] "/Volumes/data_erker/aviris_madison/aviris-c/2009/MADISON_WI/f090729t01p00r05rdn_b/f090729t01p00r05rdn_b_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"

**** quick look paths
#+begin_src R
aviris.2009.quicklook.paths <- str_c(aviris.2009.dir, aviris.2009.base.names, "/", aviris.2009.base.names, "_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS")

aviris.2009.quicklook.paths
#+end_src

#+RESULTS:
: [1] "/Volumes/data_erker/aviris_madison/aviris-c/2009/MADISON_WI/f090729t01p00r05rdn_b/f090729t01p00r05rdn_b_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"

**** plot
#+begin_src R
ql.2009 <- brick(aviris.2009.quicklook.paths)
#+end_src

#+RESULTS:
: Error in .local(.Object, ...) :
:   `/Volumes/data_erker/aviris_madison/aviris-c/2009/MADISON_WI/f090729t01p00r05rdn_b/f090729t01p00r05rdn_b_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS' does not exist in the file system,
: and is not recognised as a supported dataset name.
:
:
: Error in .rasterObjectFromFile(x, objecttype = "RasterBrick", ...) :
:   Cannot create a RasterLayer object from this file. (file does not exist)

#+begin_src R :exports results :results graphics :file ../figs/quicklook_2009.png
plotRGB(ql.2009, 3,2,1, stretch = "lin")
#+end_src

#+RESULTS:
[[file:../figs/quicklook_2009.png]]

#+begin_src sh
python
#+end_src

*** 2010

**** kml
/ssh:serak:/data1/aviris-c/KMLs/AVIRIS_Data_2010.kml
**** Aviris readme
=========================================================================

AVIRIS Distribution Document 100625

SEND COMMENTS TO sarah.r.lundeen@jpl.nasa.gov
                 or
                 robert.o.green@jpl.nasa.gov

Additional information may be found on http://aviris.jpl.nasa.gov

--------------------------------------------------------------------------

This document describes the data products and contents of an AVIRIS delivery.

Each AVIRIS data product uses the following base name for naming convention (file name extensions are explained later in the document:

fyymmddtnnpnnrnn
----------------

f:     Airborne Flight.
yy:    The year of the airborne flight run (i.e. 10 represents 2010).
mm:    The month of the airborne flight run (i.e. 05 represents May).
dd:    The day of the airborne flight run (i.e. 22 represents 22nd day of the month).
tnn:   Legacy naming convention when AVIRIS used to record data onto VLDS tapes.
pnn:   Power cycle number (static number of 00).
rnn:   Airborne flight run number.
v:     Radiance software version number


The AVIRIS data products for a particular airborne flight run are organized in the following directory structure:

/fyymmddtnnpnnrnnrdn_v
|
|   *ortho.readme
|   AVIRIS_OrthoProcessing_Info.txt
|   fmmyyddtnnpnnrnnrdn_v_*gain
|   fmmyyddtnnpnnrnnrdn_v_*rcc
|   fmmyyddtnnpnnrnnrdn_v_*spc
|   fmmyyddtnnpnnrnnrdn_v_*eph
|   fmmyyddtnnpnnrnnrdn_v_*lonlat_eph
|   fmmyyddtnnpnnrnnrdn_v_*obs
|   fmmyyddtnnpnnrnnrdn_v_*obs.hdr
|   fmmyyddtnnpnnrnnrdn_v_*obs_ort
|   fmmyyddtnnpnnrnnrdn_v_*obs_ort.hdr
|   fmmyyddtnnpnnrnnrdn_v_*ort.plog
|   fmmyyddtnnpnnrnnrdn_v_*ort_glt
|   fmmyyddtnnpnnrnnrdn_v_*ort_glt.hdr
|   fmmyyddtnnpnnrnnrdn_v_*ort_igm
|   fmmyyddtnnpnnrnnrdn_v_*ort_igm.hdr
|   fmmyyddtnnpnnrnnrdn_v_*ort_img
|   fmmyyddtnnpnnrnnrdn_v_*ort_img.hdr

The following types of files should be found:

PER FLIGHT RUN:
   *gain                 multiplication factors, radiance to 16-bit integer,
   *rcc                  radiometric calibration coefficients,
   *spc                  spectral calibration file,
   *eph                  position data in a WGS-84/NAD83 UTM x,y,z coordinate system,
   *lonlat_eph           position in WGS-84 longitude, latitude and elevation,
   *obs                  parameters relating to the geometry of the observation and
                         illumination conditions in raw spatial format,
   *obs.hdr              OBS image header file
   *obs_ort              parameters relating to the geometry of the observation and
                         illumination conditions rendered using the *_ort_glt lookup
                         table,
   *obs_ort.hdr          OBS_ORT image header file,
   *ort.plog             generic data processing info
   *ortho.readme         this file,
   *ort_glt              geometric look-up table,
   *ort_glt.hdr          GLT image header file,
   *ort_igm              input geometry file,
   *ort_igm.hdr          IGM image header file,
   *ort_img              orthocorrected, scaled radiance image file,
   *ort_img.hdr          ORT_IMG image header file.

----------------------------------------------------------------------------
----------------------------------------------------------------------------

Contents of Files located in /fyymmddtnnpnnrnnrdn_v directory

----------------------------------------------------------------------------

AVIRIS_OrthoProcessing_Info.txt

Contents:   Detailed description of AVIRIS orthorectification process.
File type:  ASCII.

----------------------------------------------------------------------------

*gain           MULTIPLICATION FACTORS, RADIANCE TO 16-BIT INTEGER

Contents:   Multiplication factors to store radiance as 16-bit integers.
File type:  ASCII.
Units:      none.
Format:     Two columns:  - Multiplication factor,
                          - Channel number.
Use:        When each spectrum is divided by the factors in this file the
            16-bit integers are converted to radiance in units of (micro-
            watts/cm^2/nm/sr).

----------------------------------------------------------------------------

*rcc        RADIOMETRIC CALIBRATION COEFFICIENTS

Contents:   AVIRIS radiometric calibration coefficients and laboratory
            calibration uncertainty.
File type:  ASCII.
Units:      microwatts per centimeter_squared per nanometer per steradian
            per digitized_number.
Format:     Three columns:  - Radiometric calibration coefficent,
                            - Uncertainty in radiometric calibration coeff.,
                            - Channel number.

----------------------------------------------------------------------------

*spc        SPECTRAL CALIBRATION FILE

Contents:   AVIRIS spectral calibration.
File type:  ASCII.
Units:      nanometers.
Format:     Five columns:  - Wavelength center position,
                           - Full width at half maximum for equivalent
                             gaussian,
                           - Uncertainty in wavelength center position,
                           - Uncertainty in FWHM for equivalent gaussian,
                           - Channel number.

----------------------------------------------------------------------------

*eph         POSITION DATA (WGS-84/NAD83 UTM x,y,z coordinate system)

Contents:    The position data stored in a WGS-84/NAD83 UTM x,y,z coordinate system.
             The six values store the attitude (roll, pitch and heading) and position (x,y,z)
             for the sensor at the mid-point in each scan line.
File type:   BINARY double precision, floating point IEEE.

----------------------------------------------------------------------------

*lonlat_eph  POSITION DATA (WGS-84 longitude, latitude and elevation)

Contents:    The position data stored in a WGS-84/NAD83 UTM x,y,z coordinate system.
File type:   BINARY double precision, floating point IEEE.

----------------------------------------------------------------------------

*ort_glt     GEOMETRIC LOOKUP TABLE (GLT)

Contents:    Orthocorrected product with a fixed pixel size projected into a rotated UTM
             system that contains the information about which original pixel occupies
             which output pixel in the final product. Additionally, it is sign-coded to
             indicate if a certain output pixel is real (indicated by a positive value)
             or a nearest-neighbor infill pixel (indicated by a negative value).

             The GLT file contains two parameters:
                1) sample number
                2) original line number

File type:      BINARY 16-bit, integer, IEEE.

Format:         Band interleaved by line with dimensions (2 bands, N samples,
                N number of lines).

----------------------------------------------------------------------------

*ort_glt.hdr    HEADER FILE FOR GEOMETRIC LOOKUP TABLE (GLT.HDR) DATA

Contents:       Format of each *ort_glt file.  This file contains
                the number of lines, samples, channel, integer format, pixel size,
                scene elevation, UTM zone number and rotation angle information, etc.

File type:      ASCII

----------------------------------------------------------------------------

*ort_igm        INPUT GEOMETRY FILE (IGM)

Contents:       Pixel location data for each radiance image cube. The IGM file
                data contain three parameters:
                1) WGS-84 longitude (reported in decimal degrees)
                2) WGS-84 latitude (reported in decimal degrees)
                3) Estimated ground elevation at each pixel center
                   (reported in meters)

                No map correction or resampling is applied to the radiance
                image cube; the IGM file only reports the surface location of the unadjusted pixel centers.

File type:      BINARY 64-bit double precision, floating point IEEE.

Units:          Band 1 - decimal degrees
                Band 2 - decimal degrees
                Band 3 - meters

Format:         Band interleaved by line with dimensions (3 bands, 677 samples,
                N number of lines).

----------------------------------------------------------------------------

*ort_igm.hdr    HEADER FILE FOR INPUT GEOMETRY FILE (IGM) DATA

Contents:       Format of each *ort_igm file.  This file contains
                the number of lines, samples, channel, integer format, etc.

File type:      ASCII

----------------------------------------------------------------------------

Contents of Files located in /rdn directory

----------------------------------------------------------------------------

*rdn_v_img      CALIBRATED AVIRIS RADIANCE (IMAGE) DATA

Contents:       AVIRIS calibrated radiance multipled by the gain and stored as
                16-bit integers.

File type:      BINARY 16-bit signed integer IEEE.

Units:          gain times (microwatts per centimeter_squared per nanometer per
                steradian).

Format:         Band interleaved by pixel (channel, sample, line) with dimensions
                (224, ns,nl).
--------------------------------------------------------------------------------

*rdn_v_img.hdr   HEADER FILE FOR CALIBRATED AVIRIS RADIANCE (IMAGE) DATA

Contents:        Format of each AVIRIS calibrated radiance scene.  This file contains
                 the number of lines, samples, channel, integer format, etc.

File type:       ASCII

=========================================================================
KNOWN ARTIFACTS

1)  There is a slew effect in the AVIRIS detector array readout.  Slew
expresses itself as a slight shift in the IFOV when moving from regions of
very different brightnesses.

2) In 2002, the bad detector at channel 77 has been interpolated.
=========================================================================
**** Aviris ortho processing
NEW AVIRIS ORTHOCORRECTION PROCESSING AND PRODUCTS
Last Modified 070214, J. W. Boardman
Questions/Comments, contact Sarah.R.Lundeen@jpl.nasa.gov

A new production orthocorrection system has been implemented for AVIRIS data.
Here we briefly describe the new system, its products and detail how they
differ from previous AVIRIS geocorrection files.

The new system uses the same IGM, GLT lookup-table methodology for data
rendering, but employs a full three-dimensional ray tracing and a 30m spatial
resolution digital elevation model for complete orthorectification.  Each pixel
in the imagery is individually ray traced using the best-estimate of sensor
location and attitude until it intersects the digital elevation model.  The
spatial fidelity of the data should be much improved, especially in areas of
rugged and variable across-track terrain.  The previous geocorrection code only
applied a single ground elevation for each scan line of data and those
elevations were determined from interpolation of the very coarse GTOPO30
digital elevation model.  The new ortho code does a full 3-d ray tracing for
each pixel and uses the USGS NED 1 arc second (roughly 30m) digital elevation
data.

While we expect the data to be improved over previous versions of AVIRIS
geocorrection, we do not expect the production data to be accurate or precise
at the subpixel level.  Time and sensor specific angular and spatial offsets
and biases affect the solution.  We have used data from multiple flight lines
in April 2006 to solve for average values for these sensor-to-body parameters.
While the solution showed these parameters to be mostly stable, so the mean is
a good substitute, there was some variation from line to line.  As such, fine
tuning of the ortho model on a line by line basis is still suggested if one
requires subpixel accuracy and precision.  But such line-specific processing,
using ground control points from outside data sources, is well beyond the scope
of the AVIRIS production facility.

The new IGM file (*_ort_igm) is changed in two ways from the previous IGM
files.  First, the new file has three bands, instead of two.  The third band is
the elevation of the ray tracing intersection, our estimate for the ground
elevation at each pixel center.  This third band can be passed through the
ortho GLT (*_ort_glt) to build a map-correct digital elevation model for
draping and/or modeling of the AVIRIS spectral data.  The second change to the
IGM files is the projection system used for the x/y map data in the first two
bands.  Previous versions of the orthocorrection code reported pixel center map
locations in UTM WGS-84 coordinates in the first two bands.  The new code uses
WGS-84 longitude and latitude instead of UTM x-y values.  Band 1 of the
*_ort_igm is WGS-84 longitude and band 2 is WGS-84 latitude (both in decimal
degrees).

In addition to the orthocorrection upgrade there is a wholly new data set
(*_obs and *_obs_ort) that contains pertinent parameters relating to the
geometry of the observation and illumination conditions.  The two versions of
this file are before and after GLT-application.  The file *_obs is in the raw
spatial format and matches the uncorrected AVIRIS data.  The *_obs_ort file has
been rendered using the *_ort_glt lookup table and matches the orthocorrected
imagery.  This observation parameter file has ten bands.  The ten bands, in
order, are: path length (sensor-to-ground in meters); to-sensor-azimuth (0 to
360 degrees cw from N); to-sensor-zenith (0 to 90 degrees from zenith); to-sun-
azimuth; to-sun-zenith; phase (degrees between to-sensor and to-sun vectors in
principal plane); slope (local surface slope as derived from DEM in degrees);
aspect (local surface aspect 0 to 360 degrees cw from N); cosine i (apparent
local illumination factor based on DEM slope and aspect and to-sun vector, -1
to 1) and UTC time (decimal hours for mid-line pixels).  We encourage anyone
using these auxiliary parameters, especially for science-critical applications,
to verify them against other models and sources as this is a new implementation
and an experimental data set.

One additional change in the data delivery is the creation of two separate
ephemeris files.  As before, these are binary files with 6 values stored in
double precision float (Intel byte order) for each AVIRIS scan line.  The six
values store the attitude (roll, pitch and heading) and position (x,y,z) for
the sensor at the mid-point in each scan line.  The file *_eph has the position
data in a WGS-84/NAD83 UTM x,y,z coordinate system.  The file *_lonlat_eph
stores position in WGS-84 longitude, latitude and elevation.  Both ephemeris
files have the raw GPS ellipsoidal elevation converted to orthometric
elevations via use of the NGA EGM96 global geoid model.
**** files dir
#+begin_src R :results none
aviris.2010.dir <- str_c(madison.aviris.dir,"aviris-c/2010/WISCONSIN/MADISON/")
#+end_src

**** files base
#+begin_src R :results none
aviris.2010.base.names <- c("f100826t01p00r06rdn_b", "f100826t01p00r07rdn_b", "f100826t01p00r08rdn_b")
#+end_src

**** image paths
#+begin_src R
aviris.2010.image.paths <- str_c(aviris.2010.dir, aviris.2010.base.names, "/", aviris.2010.base.names, "_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr")
aviris.2010.image.paths
#+end_src

#+RESULTS:
: [1] "../RD/serakData1/aviris-c/2010/WISCONSIN/MADISON/f100826t01p00r06rdn_b/f100826t01p00r06rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
: [2] "../RD/serakData1/aviris-c/2010/WISCONSIN/MADISON/f100826t01p00r07rdn_b/f100826t01p00r07rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
: [3] "../RD/serakData1/aviris-c/2010/WISCONSIN/MADISON/f100826t01p00r08rdn_b/f100826t01p00r08rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"

**** quick look paths
#+begin_src R
aviris.2010.quicklook.paths <- str_c(aviris.2010.dir, aviris.2010.base.names, "/", aviris.2010.base.names, "_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS")

aviris.2010.quicklook.paths
#+end_src

#+RESULTS:
: [1] "../RD/serakData1/aviris-c/2010/WISCONSIN/MADISON/f100826t01p00r06rdn_b/f100826t01p00r06rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
: [2] "../RD/serakData1/aviris-c/2010/WISCONSIN/MADISON/f100826t01p00r07rdn_b/f100826t01p00r07rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
: [3] "../RD/serakData1/aviris-c/2010/WISCONSIN/MADISON/f100826t01p00r08rdn_b/f100826t01p00r08rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
**** plot
#+begin_src R
ql.2010 <- brick(aviris.2010.quicklook.paths[1])
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/quicklook_2010.png
plotRGB(ql.2010, 3,2,1, stretch = "lin")
#+end_src

#+RESULTS:
[[file:../figs/quicklook_2010.png]]


#+begin_src R
b <- brick("/Volumes/data_erker/aviris_madison/2010/f100826t01p00r06rdn_b/f100826t01p00r06rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS_withRot.tif")
c <- brick("/Volumes/data_erker/aviris_madison/2010/f100826t01p00r06rdn_b/f100826t01p00r06rdn_b_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS_norotation.tif")
#+end_src

#+RESULTS:

#+RESULTS:
: suggested tolerance minimum: 0.890008
: Error in points2grid(points, tolerance, round) :
:   dimension 1 : coordinate intervals are not constant

#+begin_src R :exports results :results graphics :file ../figs/test.png
plotRGB(b,3,2,1, stretch = "lin")
plotRGB(c,3,2,1, stretch = "lin", add = T)
#+end_src

#+RESULTS:
[[file:../figs/test.png]]

#+begin_src R :exports results :results graphics :file ../figs/f2.png
plot(b)
#+end_src

#+RESULTS:
[[file:../figs/f2.png]]




#+begin_src R
    b <- brick(system.file("external/rlogo.grd", package="raster"))
    proj4string(b) <- crs("+init=epsg:32616")

 writeRaster(b, "R.tif")

#+end_src

#+RESULTS:
: Error in .getGDALtransient(x, filename = filename, options = options,  :
:   filename exists; use overwrite=TRUE

#+BEGIN_SRC python
  import sys
  from osgeo import gdal
  from osgeo import osr
  import numpy as np
  from math import *

  def array2TIFF(inputArray,gdalData,datatype,angle,noData,outputTIFF):
      #    this script takes a numpy array and saves it to a geotiff
      #    given a gdal.Dataset object describing the spatial atributes of the data set
      #    the array datatype (as a gdal object) and the name of the output raster, and rotation angle in degrees

        #get the file format driver, in this case the file will be saved as a GeoTiff
      driver = gdal.GetDriverByName("GTIFF")

      #set the output raster properties
      tiff = driver.Create(outputTIFF,gdalData.RasterXSize,gdalData.RasterYSize,inputArray.shape[0],datatype)

      transform = []

      originX = gdalData.GetGeoTransform()[0]
      cellSizeX = gdalData.GetGeoTransform()[1]
      originY = gdalData.GetGeoTransform()[3]
      cellSizeY = gdalData.GetGeoTransform()[5]
      rotation = np.radians(angle)

      transform.append(originX)
      transform.append(cos(rotation) * cellSizeX)
      transform.append(sin(rotation) * cellSizeX)
      transform.append(originY)
      transform.append(-sin(rotation) * cellSizeY)
      transform.append(cos(rotation) * cellSizeY)

      transform = tuple(transform)

      #set the geotransofrm values which include corner coordinates and cell size
      #once again we can use the original geotransform data because nothing has been changed
      tiff.SetGeoTransform(transform)

      #next the Projection info is defined using the original data
      tiff.SetProjection(gdalData.GetProjection())

      #cycle through each band
      for band in range(inputArray.shape[0]):
          #the data is written to the first raster band in the image
          tiff.GetRasterBand(band+1).WriteArray(inputArray[band])

          #set no data value
          tiff.GetRasterBand(band+1).SetNoDataValue(0)

          #the file is written to the disk once the driver variables are deleted
      del tiff, driver

  inputTif = gdal.Open("R.tif")
  inputArray = inputTif.ReadAsArray()

  array2TIFF(inputArray,inputTif, gdal.GDT_Float64, -45, 0, "R_neg45.tif")
  array2TIFF(inputArray,inputTif, gdal.GDT_Float64, 45, 0, "R_pos45.tif")

#+END_SRC

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/rlogo.png
plotRGB(b,1,2,3)
#+end_src

#+RESULTS:
[[file:../figs/rlogo.png]]

#+begin_src R :exports results :results graphics :file ../figs/rlogo_neg45.png
c <- brick("R_neg45.tif")
plotRGB(c,1,2,3)
#+end_src

#+RESULTS:
[[file:../figs/rlogo_neg45.png]]

#+end_src

#+RESULTS:
: class       : RasterBrick
: dimensions  : 77, 101, 7777, 3  (nrow, ncol, ncell, nlayers)
: resolution  : 1, 1  (x, y)
: extent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax)
: coord. ref. : +init=epsg:32616 +proj=utm +zone=16 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0
: data source : /usr/local/lib/R/3.3/site-library/raster/external/rlogo.grd
: names       : red, green, blue
: min values  :   0,     0,    0
: max values  : 255,   255,  255

#+begin_src R :exports results :results graphics :file ../figs/rlogo_pos45.png
d <- brick("R_pos45.tif")
plotRGB(d,1,2,3)
#+end_src

#+RESULTS:
[[file:../figs/rlogo_pos45.png]]


#+BEGIN_SRC sh :results raw
gdalinfo R_neg45.tif
#+END_SRC

#+RESULTS:
Driver: GTiff/GeoTIFF
Files: R_neg45.tif
Size is 101, 77
Coordinate System is:
PROJCS["WGS 84 / UTM zone 16N",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",-87],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AUTHORITY["EPSG","32616"]]
GeoTransform =
  0, 0.7071067811865476, -0.7071067811865475
  77, -0.7071067811865475, -0.7071067811865476
Metadata:
  AREA_OR_POINT=Area
Image Structure Metadata:
  INTERLEAVE=PIXEL
Corner Coordinates:
Upper Left  (   0.0000000,  77.0000000) ( 91d29'19.48"W,  0d 0' 2.50"N)
Lower Left  ( -54.4472222,  22.5527778) ( 91d29'21.23"W,  0d 0' 0.73"N)
Upper Right (  71.4177849,   5.5822151) ( 91d29'17.17"W,  0d 0' 0.18"N)
Lower Right (  16.9705627, -48.8650071) ( 91d29'18.93"W,  0d 0' 1.59"S)
Center      (   8.4852814,  14.0674965) ( 91d29'19.20"W,  0d 0' 0.46"N)
Band 1 Block=101x3 Type=Float64, ColorInterp=Gray
  NoData Value=0
Band 2 Block=101x3 Type=Float64, ColorInterp=Undefined
  NoData Value=0
Band 3 Block=101x3 Type=Float64, ColorInterp=Undefined
  NoData Value=0


#+BEGIN_SRC sh :results raw
gdalinfo R_pos45.tif
#+END_SRC

#+RESULTS:
Driver: GTiff/GeoTIFF
Files: R_pos45.tif
Size is 101, 77
Coordinate System is:
PROJCS["WGS 84 / UTM zone 16N",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",-87],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AUTHORITY["EPSG","32616"]]
GeoTransform =
  0, 0.7071067811865476, 0.7071067811865475
  77, 0.7071067811865475, -0.7071067811865476
Metadata:
  AREA_OR_POINT=Area
Image Structure Metadata:
  INTERLEAVE=PIXEL
Corner Coordinates:
Upper Left  (   0.0000000,  77.0000000) ( 91d29'19.48"W,  0d 0' 2.50"N)
Lower Left  (  54.4472222,  22.5527778) ( 91d29'17.72"W,  0d 0' 0.73"N)
Upper Right (      71.418,     148.418) ( 91d29'17.17"W,  0d 0' 4.82"N)
Lower Right (     125.865,      93.971) ( 91d29'15.42"W,  0d 0' 3.05"N)
Center      (  62.9325035,  85.4852814) ( 91d29'17.45"W,  0d 0' 2.78"N)
Band 1 Block=101x3 Type=Float64, ColorInterp=Gray
  NoData Value=0
Band 2 Block=101x3 Type=Float64, ColorInterp=Undefined
  NoData Value=0
Band 3 Block=101x3 Type=Float64, ColorInterp=Undefined
  NoData Value=0






*** 2011
**** kml
/ssh:serak:/data1/aviris-c/KMLs/AVIRIS_Data_2011.kml
**** AVIRIS_OrthoProcessing_Info.txt
NEW AVIRIS ORTHOCORRECTION PROCESSING AND PRODUCTS
Last Modified 070214, J. W. Boardman
Questions/Comments, contact Sarah.R.Lundeen@jpl.nasa.gov

A new production orthocorrection system has been implemented for AVIRIS data.
Here we briefly describe the new system, its products and detail how they
differ from previous AVIRIS geocorrection files.

The new system uses the same IGM, GLT lookup-table methodology for data
rendering, but employs a full three-dimensional ray tracing and a 30m spatial
resolution digital elevation model for complete orthorectification.  Each pixel
in the imagery is individually ray traced using the best-estimate of sensor
location and attitude until it intersects the digital elevation model.  The
spatial fidelity of the data should be much improved, especially in areas of
rugged and variable across-track terrain.  The previous geocorrection code only
applied a single ground elevation for each scan line of data and those
elevations were determined from interpolation of the very coarse GTOPO30
digital elevation model.  The new ortho code does a full 3-d ray tracing for
each pixel and uses the USGS NED 1 arc second (roughly 30m) digital elevation
data.

While we expect the data to be improved over previous versions of AVIRIS
geocorrection, we do not expect the production data to be accurate or precise
at the subpixel level.  Time and sensor specific angular and spatial offsets
and biases affect the solution.  We have used data from multiple flight lines
in April 2006 to solve for average values for these sensor-to-body parameters.
While the solution showed these parameters to be mostly stable, so the mean is
a good substitute, there was some variation from line to line.  As such, fine
tuning of the ortho model on a line by line basis is still suggested if one
requires subpixel accuracy and precision.  But such line-specific processing,
using ground control points from outside data sources, is well beyond the scope
of the AVIRIS production facility.

The new IGM file (*_ort_igm) is changed in two ways from the previous IGM
files.  First, the new file has three bands, instead of two.  The third band is
the elevation of the ray tracing intersection, our estimate for the ground
elevation at each pixel center.  This third band can be passed through the
ortho GLT (*_ort_glt) to build a map-correct digital elevation model for
draping and/or modeling of the AVIRIS spectral data.  The second change to the
IGM files is the projection system used for the x/y map data in the first two
bands.  Previous versions of the orthocorrection code reported pixel center map
locations in UTM WGS-84 coordinates in the first two bands.  The new code uses
WGS-84 longitude and latitude instead of UTM x-y values.  Band 1 of the
*_ort_igm is WGS-84 longitude and band 2 is WGS-84 latitude (both in decimal
degrees).

In addition to the orthocorrection upgrade there is a wholly new data set
(*_obs and *_obs_ort) that contains pertinent parameters relating to the
geometry of the observation and illumination conditions.  The two versions of
this file are before and after GLT-application.  The file *_obs is in the raw
spatial format and matches the uncorrected AVIRIS data.  The *_obs_ort file has
been rendered using the *_ort_glt lookup table and matches the orthocorrected
imagery.  This observation parameter file has ten bands.  The ten bands, in
order, are: path length (sensor-to-ground in meters); to-sensor-azimuth (0 to
360 degrees cw from N); to-sensor-zenith (0 to 90 degrees from zenith); to-sun-
azimuth; to-sun-zenith; phase (degrees between to-sensor and to-sun vectors in
principal plane); slope (local surface slope as derived from DEM in degrees);
aspect (local surface aspect 0 to 360 degrees cw from N); cosine i (apparent
local illumination factor based on DEM slope and aspect and to-sun vector, -1
to 1) and UTC time (decimal hours for mid-line pixels).  We encourage anyone
using these auxiliary parameters, especially for science-critical applications,
to verify them against other models and sources as this is a new implementation
and an experimental data set.

One additional change in the data delivery is the creation of two separate
ephemeris files.  As before, these are binary files with 6 values stored in
double precision float (Intel byte order) for each AVIRIS scan line.  The six
values store the attitude (roll, pitch and heading) and position (x,y,z) for
the sensor at the mid-point in each scan line.  The file *_eph has the position
data in a WGS-84/NAD83 UTM x,y,z coordinate system.  The file *_lonlat_eph
stores position in WGS-84 longitude, latitude and elevation.  Both ephemeris
files have the raw GPS ellipsoidal elevation converted to orthometric
elevations via use of the NGA EGM96 global geoid model.


**** readme
=========================================================================

AVIRIS Distribution Document 100625

SEND COMMENTS TO sarah.r.lundeen@jpl.nasa.gov
                 or
                 robert.o.green@jpl.nasa.gov

Additional information may be found on http://aviris.jpl.nasa.gov

--------------------------------------------------------------------------

This document describes the data products and contents of an AVIRIS delivery.

Each AVIRIS data product uses the following base name for naming convention (file name extensions are explained later in the document:

fyymmddtnnpnnrnn
----------------

f:     Airborne Flight.
yy:    The year of the airborne flight run (i.e. 10 represents 2010).
mm:    The month of the airborne flight run (i.e. 05 represents May).
dd:    The day of the airborne flight run (i.e. 22 represents 22nd day of the month).
tnn:   Legacy naming convention when AVIRIS used to record data onto VLDS tapes.
pnn:   Power cycle number (static number of 00).
rnn:   Airborne flight run number.
v:     Radiance software version number


The AVIRIS data products for a particular airborne flight run are organized in the following directory structure:

/fyymmddtnnpnnrnnrdn_v
|
|   *ortho.readme
|   AVIRIS_OrthoProcessing_Info.txt
|   fmmyyddtnnpnnrnnrdn_v_*gain
|   fmmyyddtnnpnnrnnrdn_v_*rcc
|   fmmyyddtnnpnnrnnrdn_v_*spc
|   fmmyyddtnnpnnrnnrdn_v_*eph
|   fmmyyddtnnpnnrnnrdn_v_*lonlat_eph
|   fmmyyddtnnpnnrnnrdn_v_*obs
|   fmmyyddtnnpnnrnnrdn_v_*obs.hdr
|   fmmyyddtnnpnnrnnrdn_v_*obs_ort
|   fmmyyddtnnpnnrnnrdn_v_*obs_ort.hdr
|   fmmyyddtnnpnnrnnrdn_v_*ort.plog
|   fmmyyddtnnpnnrnnrdn_v_*ort_glt
|   fmmyyddtnnpnnrnnrdn_v_*ort_glt.hdr
|   fmmyyddtnnpnnrnnrdn_v_*ort_igm
|   fmmyyddtnnpnnrnnrdn_v_*ort_igm.hdr
|   fmmyyddtnnpnnrnnrdn_v_*ort_img
|   fmmyyddtnnpnnrnnrdn_v_*ort_img.hdr

The following types of files should be found:

PER FLIGHT RUN:
   *gain                 multiplication factors, radiance to 16-bit integer,
   *rcc                  radiometric calibration coefficients,
   *spc                  spectral calibration file,
   *eph                  position data in a WGS-84/NAD83 UTM x,y,z coordinate system,
   *lonlat_eph           position in WGS-84 longitude, latitude and elevation,
   *obs                  parameters relating to the geometry of the observation and
                         illumination conditions in raw spatial format,
   *obs.hdr              OBS image header file
   *obs_ort              parameters relating to the geometry of the observation and
                         illumination conditions rendered using the *_ort_glt lookup
                         table,
   *obs_ort.hdr          OBS_ORT image header file,
   *ort.plog             generic data processing info
   *ortho.readme         this file,
   *ort_glt              geometric look-up table,
   *ort_glt.hdr          GLT image header file,
   *ort_igm              input geometry file,
   *ort_igm.hdr          IGM image header file,
   *ort_img              orthocorrected, scaled radiance image file,
   *ort_img.hdr          ORT_IMG image header file.

----------------------------------------------------------------------------
----------------------------------------------------------------------------

Contents of Files located in /fyymmddtnnpnnrnnrdn_v directory

----------------------------------------------------------------------------

AVIRIS_OrthoProcessing_Info.txt

Contents:   Detailed description of AVIRIS orthorectification process.
File type:  ASCII.

----------------------------------------------------------------------------

*gain           MULTIPLICATION FACTORS, RADIANCE TO 16-BIT INTEGER

Contents:   Multiplication factors to store radiance as 16-bit integers.
File type:  ASCII.
Units:      none.
Format:     Two columns:  - Multiplication factor,
                          - Channel number.
Use:        When each spectrum is divided by the factors in this file the
            16-bit integers are converted to radiance in units of (micro-
            watts/cm^2/nm/sr).

----------------------------------------------------------------------------

*rcc        RADIOMETRIC CALIBRATION COEFFICIENTS

Contents:   AVIRIS radiometric calibration coefficients and laboratory
            calibration uncertainty.
File type:  ASCII.
Units:      microwatts per centimeter_squared per nanometer per steradian
            per digitized_number.
Format:     Three columns:  - Radiometric calibration coefficent,
                            - Uncertainty in radiometric calibration coeff.,
                            - Channel number.

----------------------------------------------------------------------------

*spc        SPECTRAL CALIBRATION FILE

Contents:   AVIRIS spectral calibration.
File type:  ASCII.
Units:      nanometers.
Format:     Five columns:  - Wavelength center position,
                           - Full width at half maximum for equivalent
                             gaussian,
                           - Uncertainty in wavelength center position,
                           - Uncertainty in FWHM for equivalent gaussian,
                           - Channel number.

----------------------------------------------------------------------------

*eph         POSITION DATA (WGS-84/NAD83 UTM x,y,z coordinate system)

Contents:    The position data stored in a WGS-84/NAD83 UTM x,y,z coordinate system.
             The six values store the attitude (roll, pitch and heading) and position (x,y,z)
             for the sensor at the mid-point in each scan line.
File type:   BINARY double precision, floating point IEEE.

----------------------------------------------------------------------------

*lonlat_eph  POSITION DATA (WGS-84 longitude, latitude and elevation)

Contents:    The position data stored in a WGS-84/NAD83 UTM x,y,z coordinate system.
File type:   BINARY double precision, floating point IEEE.

----------------------------------------------------------------------------

*ort_glt     GEOMETRIC LOOKUP TABLE (GLT)

Contents:    Orthocorrected product with a fixed pixel size projected into a rotated UTM
             system that contains the information about which original pixel occupies
             which output pixel in the final product. Additionally, it is sign-coded to
             indicate if a certain output pixel is real (indicated by a positive value)
             or a nearest-neighbor infill pixel (indicated by a negative value).

             The GLT file contains two parameters:
                1) sample number
                2) original line number

File type:      BINARY 16-bit, integer, IEEE.

Format:         Band interleaved by line with dimensions (2 bands, N samples,
                N number of lines).

----------------------------------------------------------------------------

*ort_glt.hdr    HEADER FILE FOR GEOMETRIC LOOKUP TABLE (GLT.HDR) DATA

Contents:       Format of each *ort_glt file.  This file contains
                the number of lines, samples, channel, integer format, pixel size,
                scene elevation, UTM zone number and rotation angle information, etc.

File type:      ASCII

----------------------------------------------------------------------------

*ort_igm        INPUT GEOMETRY FILE (IGM)

Contents:       Pixel location data for each radiance image cube. The IGM file
                data contain three parameters:
                1) WGS-84 longitude (reported in decimal degrees)
                2) WGS-84 latitude (reported in decimal degrees)
                3) Estimated ground elevation at each pixel center
                   (reported in meters)

                No map correction or resampling is applied to the radiance
                image cube; the IGM file only reports the surface location of the unadjusted pixel centers.

File type:      BINARY 64-bit double precision, floating point IEEE.

Units:          Band 1 - decimal degrees
                Band 2 - decimal degrees
                Band 3 - meters

Format:         Band interleaved by line with dimensions (3 bands, 677 samples,
                N number of lines).

----------------------------------------------------------------------------

*ort_igm.hdr    HEADER FILE FOR INPUT GEOMETRY FILE (IGM) DATA

Contents:       Format of each *ort_igm file.  This file contains
                the number of lines, samples, channel, integer format, etc.

File type:      ASCII

----------------------------------------------------------------------------

Contents of Files located in /rdn directory

----------------------------------------------------------------------------

*rdn_v_img      CALIBRATED AVIRIS RADIANCE (IMAGE) DATA

Contents:       AVIRIS calibrated radiance multipled by the gain and stored as
                16-bit integers.

File type:      BINARY 16-bit signed integer IEEE.

Units:          gain times (microwatts per centimeter_squared per nanometer per
                steradian).

Format:         Band interleaved by pixel (channel, sample, line) with dimensions
                (224, ns,nl).
--------------------------------------------------------------------------------

*rdn_v_img.hdr   HEADER FILE FOR CALIBRATED AVIRIS RADIANCE (IMAGE) DATA

Contents:        Format of each AVIRIS calibrated radiance scene.  This file contains
                 the number of lines, samples, channel, integer format, etc.

File type:       ASCII

=========================================================================
KNOWN ARTIFACTS

1)  There is a slew effect in the AVIRIS detector array readout.  Slew
expresses itself as a slight shift in the IFOV when moving from regions of
very different brightnesses.

2) In 2002, the bad detector at channel 77 has been interpolated.
=========================================================================


**** files dir
#+begin_src R :results none
aviris.2011.dir <- str_c(madison.aviris.dir,"aviris-c/2011/MADISON_WI/")
#+end_src

**** files base
#+begin_src R :results none
aviris.2011.base.names <- c("f110730t01p00r10rdn_a", "f110730t01p00r11rdn_a", "f110730t01p00r12rdn_a", "f110730t01p00r13rdn_a", "f110730t01p00r14rdn_a", "f110730t01p00r15rdn_c", "f110730t01p00r16rdn_c", "f110730t01p00r17rdn_c", "f110730t01p00r18rdn_c", "f110730t01p00r19rdn_c", "f110730t01p00r20rdn_c", "f110730t01p00r21rdn_c", "f110810t01p00r07rdn_a", "f110814t01p00r16rdn_a", "f110816t01p00r06rdn_a", "f110816t01p00r07rdn_a", "f110816t01p00r08rdn_a", "f110816t01p00r09rdn_a", "f110816t01p00r10rdn_a", "f110816t01p00r11rdn_a", "f110816t01p00r12rdn_a")
#+end_src

**** image paths
#+begin_src R
aviris.2011.image.paths <- str_c(aviris.2011.dir, aviris.2011.base.names, "/", aviris.2011.base.names, "_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr")
aviris.2011.image.paths
#+end_src

#+RESULTS:
#+begin_example

[1] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r10rdn_a/f110730t01p00r10rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [2] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r11rdn_a/f110730t01p00r11rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [3] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r12rdn_a/f110730t01p00r12rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [4] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r13rdn_a/f110730t01p00r13rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [5] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r14rdn_a/f110730t01p00r14rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [6] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r15rdn_c/f110730t01p00r15rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [7] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r16rdn_c/f110730t01p00r16rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [8] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r17rdn_c/f110730t01p00r17rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
 [9] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r18rdn_c/f110730t01p00r18rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[10] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r19rdn_c/f110730t01p00r19rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[11] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r20rdn_c/f110730t01p00r20rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[12] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r21rdn_c/f110730t01p00r21rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[13] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110810t01p00r07rdn_a/f110810t01p00r07rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[14] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110814t01p00r16rdn_a/f110814t01p00r16rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[15] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r06rdn_a/f110816t01p00r06rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[16] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r07rdn_a/f110816t01p00r07rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[17] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r08rdn_a/f110816t01p00r08rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[18] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r09rdn_a/f110816t01p00r09rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[19] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r10rdn_a/f110816t01p00r10rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[20] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r11rdn_a/f110816t01p00r11rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
[21] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r12rdn_a/f110816t01p00r12rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr"
#+end_example

**** quick look paths
#+begin_src R
aviris.2011.quicklook.paths <- str_c(aviris.2011.dir, aviris.2011.base.names, "/", aviris.2011.base.names, "_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS")

aviris.2011.quicklook.paths
#+end_src

#+RESULTS:
#+begin_example

[1] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r10rdn_a/f110730t01p00r10rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [2] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r11rdn_a/f110730t01p00r11rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [3] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r12rdn_a/f110730t01p00r12rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [4] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r13rdn_a/f110730t01p00r13rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [5] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r14rdn_a/f110730t01p00r14rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [6] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r15rdn_c/f110730t01p00r15rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [7] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r16rdn_c/f110730t01p00r16rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [8] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r17rdn_c/f110730t01p00r17rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
 [9] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r18rdn_c/f110730t01p00r18rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[10] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r19rdn_c/f110730t01p00r19rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[11] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r20rdn_c/f110730t01p00r20rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[12] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110730t01p00r21rdn_c/f110730t01p00r21rdn_c_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[13] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110810t01p00r07rdn_a/f110810t01p00r07rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[14] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110814t01p00r16rdn_a/f110814t01p00r16rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[15] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r06rdn_a/f110816t01p00r06rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[16] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r07rdn_a/f110816t01p00r07rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[17] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r08rdn_a/f110816t01p00r08rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[18] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r09rdn_a/f110816t01p00r09rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[19] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r10rdn_a/f110816t01p00r10rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[20] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r11rdn_a/f110816t01p00r11rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
[21] "../RD/serakData1/aviris-c/2011/MADISON_WI/f110816t01p00r12rdn_a/f110816t01p00r12rdn_a_sc01_ort_img_tafkaa_orig_refl_img_bsq_trc_xtr_6BANDS"
#+end_example
**** plot
#+begin_src R
ql.2011 <- brick(aviris.2011.quicklook.paths[1])
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/quicklook_2011.png
plotRGB(ql.2011, 3,2,1, stretch = "lin")
#+end_src

#+RESULTS:
[[file:../figs/quicklook_2011.png]]


*** 2014

**** files dir
#+begin_src R :results none
aviris.2014.dir <- str_c(madison.aviris.dir,"aviris-ng/L2/2014/")
aviris.2014.quicklook.dir <- str_c(madison.aviris.dir,"aviris-ng/zzL2_quicklooks_shpfiles/2014/")
#+end_src

#+RESULTS:

**** files base
#+begin_src R :results none
aviris.2014.base.names <- c("ang20140909t194211")
#+end_src

**** image paths
#+begin_src R
aviris.2014.image.paths <- str_c(aviris.2014.dir, aviris.2014.base.names, "_rfl_v1c/", aviris.2014.base.names, "_corr_v1c_img")
aviris.2014.image.paths
#+end_src

#+RESULTS:
: [1] "../RD/serakData1/aviris-ng/L2/2014/ang20140909t194211_rfl_v1c/ang20140909t194211_corr_v1c_img"

**** quick look paths
#+begin_src R

aviris.2014.quicklook.paths <- str_c(aviris.2014.quicklook.dir, aviris.2014.base.names, "_rfl_v1c/", aviris.2014.base.names, "_corr_v1c_img.tif")

aviris.2014.quicklook.paths
#+end_src

#+RESULTS:
: [1] "../RD/serakData1/aviris-ng/zzL2_quicklooks_shpfiles/2014/ang20140909t194211_rfl_v1c/ang20140909t194211_corr_v1c_img.tif"


**** plot
#+begin_src R
ql.2014 <- brick(aviris.2014.quicklook.paths[1])
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/quicklook_2014.png
plotRGB(ql.2014, 3,2,1, stretch = "lin")
#+end_src

#+RESULTS:
[[file:../figs/quicklook_2014.png]]



*** 2015

**** files dir
#+begin_src R :results none
aviris.2015.dir <- str_c(madison.aviris.dir,"2015/")
aviris.2015.quicklook.dir <- str_c(madison.aviris.dir,"2015/quicklooks/")
#+end_src

#+RESULTS:

**** files base
#+begin_src R :results none
aviris.2015.base.names <- c("ang20150903t162409", "ang20150901t170654", "ang20150901t172146", "ang20150901t173401", "ang20150901t174405", "ang20150903t154619", "ang20150903t155648", "ang20150903t160855")
#+end_src

**** image paths
#+begin_src R
aviris.2015.image.paths <- str_c(aviris.2015.dir, aviris.2015.base.names, "_rfl_v1h/", aviris.2015.base.names, "_corr_v1h_img")
aviris.2015.image.paths
#+end_src

#+RESULTS:
: [1] "/Volumes/data_erker/aviris_madison/2015/ang20150903t162409_rfl_v1h/ang20150903t162409_corr_v1h_img"
: [2] "/Volumes/data_erker/aviris_madison/2015/ang20150901t170654_rfl_v1h/ang20150901t170654_corr_v1h_img"
: [3] "/Volumes/data_erker/aviris_madison/2015/ang20150901t172146_rfl_v1h/ang20150901t172146_corr_v1h_img"
: [4] "/Volumes/data_erker/aviris_madison/2015/ang20150901t173401_rfl_v1h/ang20150901t173401_corr_v1h_img"
: [5] "/Volumes/data_erker/aviris_madison/2015/ang20150901t174405_rfl_v1h/ang20150901t174405_corr_v1h_img"
: [6] "/Volumes/data_erker/aviris_madison/2015/ang20150903t154619_rfl_v1h/ang20150903t154619_corr_v1h_img"
: [7] "/Volumes/data_erker/aviris_madison/2015/ang20150903t155648_rfl_v1h/ang20150903t155648_corr_v1h_img"
: [8] "/Volumes/data_erker/aviris_madison/2015/ang20150903t160855_rfl_v1h/ang20150903t160855_corr_v1h_img"

**** quick look paths
#+begin_src R

aviris.2015.quicklook.paths <- str_c(aviris.2015.quicklook.dir, aviris.2015.base.names, "_rfl_v1h/", aviris.2015.base.names, "_corr_v1h_img.tif")

aviris.2015.quicklook.paths
#+end_src

#+RESULTS:
: [1] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150903t162409_rfl_v1h/ang20150903t162409_corr_v1h_img.tif"
: [2] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150901t170654_rfl_v1h/ang20150901t170654_corr_v1h_img.tif"
: [3] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150901t172146_rfl_v1h/ang20150901t172146_corr_v1h_img.tif"
: [4] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150901t173401_rfl_v1h/ang20150901t173401_corr_v1h_img.tif"
: [5] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150901t174405_rfl_v1h/ang20150901t174405_corr_v1h_img.tif"
: [6] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150903t154619_rfl_v1h/ang20150903t154619_corr_v1h_img.tif"
: [7] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150903t155648_rfl_v1h/ang20150903t155648_corr_v1h_img.tif"
: [8] "/Volumes/data_erker/aviris_madison/2015/quicklooks/ang20150903t160855_rfl_v1h/ang20150903t160855_corr_v1h_img.tif"


**** plot
#+begin_src R
  mad.av.2015 <- sapply(aviris.2015.image.paths[1], FUN = brick)

#  mad.av.2015.0na <- lapply(ql.2015, FUN = function(x) {reclassify(x, matrix(c(0, NA), ncol = 2, byrow = T)) })
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/quicklook_2015.png
  plotRGB(mad.av.2015[[1]],56,32,18, stretch = "lin", bgalpha = 0)
#+end_src

#+RESULTS:
[[file:../figs/quicklook_2015.png]]





*** 2016
**** readme
===============================================================================
AVIRIS-NG Data Product Distribution Document
===============================================================================

Sarah R. Lundeen, Sarah.R.Lundeen@jpl.nasa.gov
Robert O. Green, Robert.O.Green@jpl.nasa.gov
Michael Eastwood, meastwood@jpl.nasa.gov
David R. Thompson, David.R.Thompson@jpl.nasa.gov

This document describes the AVIRIS Next Generation (AVIRIS-NG) L1 and L2 data
products.  AVIRIS-NG is an imaging spectrometer that measures reflected
radiance at 5nm intervals in the Visible/Short-Wave Infrared (VSWIR) spectral
range from 380-2500nm.

Additional information may be found on http://avirisng.jpl.nasa.gov

-------------------------------------------------------------------------------
OVERVIEW
-------------------------------------------------------------------------------

Each flightline uses a specific base filename prefix: angYYYYMMDDtHHNNSS

YYYY:  The year of the airborne flight run.
MM:    The month of the airborne flight run (i.e. 05 represents May).
DD:    The day of the airborne flight run (22 is the 22nd day of the month)
HH:    UTC hour at the start of acquisition
NN:    UTC minute at the start of acquisition
SS:    UTC second at the start of acquisition

The AVIRIS-NG  data products for a particular airborne flight run are organized
in the following directory structure, labeled with a processing version marker
VVV:

/YYYYMMDDtHHNNSS_VVV
|   angYYYYMMDDtHHNNSS_h2o_VVV_img
|   angYYYYMMDDtHHNNSS_h2o_VVV_img.hdr
|   angYYYYMMDDtHHNNSS_rdn_VVV_img
|   angYYYYMMDDtHHNNSS_rdn_VVV_img.hdr
|   angYYYYMMDDtHHNNSS_corr_VVV_img
|   angYYYYMMDDtHHNNSS_corr_VVV_img.hdr
|   angYYYYMMDDtHHNNSS_rdn_VVV_glt
|   angYYYYMMDDtHHNNSS_rdn_VVV_glt.hdr
|   angYYYYMMDDtHHNNSS_rdn_VVV_igm
|   angYYYYMMDDtHHNNSS_rdn_VVV_igm.hdr
|   angYYYYMMDDtHHNNSS_rdn_VVV_loc
|   angYYYYMMDDtHHNNSS_rdn_VVV_loc.hdr
|   angYYYYMMDDtHHNNSS_rdn_VVV_obs
|   angYYYYMMDDtHHNNSS_rdn_VVV_obs.hdr
|   angYYYYMMDDtHHNNSS_rdn_VVV_obs_ort
|   angYYYYMMDDtHHNNSS_rdn_VVV_obs_ort.hdr

The file product codes signify:

   *rdn_obs_ort    	parameters relating to the geometry of observation and
                        illumination rendered using the *glt lookup table
   *rdn_VVV_obs_ort.hdr obs_ort image header file
   *rdn_obs	    	parameters relating to the geometry of observation and
                        illumination in the raw spatial format
   *rdn_VVV_obs.hdr 	obs image header file
   *rdn_VVV_glt         geometric look-up table
   *rdn_VVV_glt.hdr   	GLT image header file
   *rdn_VVV_igm        	input geometry file
   *rdn_VVV_igm.hdr    	IGM image header file
   *rdn_VVV_loc     	pixel location data file
   *rdn_VVV_loc.hdr    	LOC image header file
   *rdn_VVV_img         orthocorrected, scaled radiance image file
   *rdn_VVV_img.hdr     RDN image header file
   *corr_VVV_img        orthocorrected, scaled reflectance image file
   *corr_VVV_img.hdr    CORR image header file
   *h2o_VVV_img         orthocorrected water absorption data
   *h2o_VVV.hdr         H2O header file


------------------------------------------------------------------------------
FILE DESCRIPTIONS
------------------------------------------------------------------------------

*rdn_VVV_glt   GEOMETRIC LOOKUP TABLE (GLT)

Contents:  Orthocorrected product with a fixed pixel size projected into a
           rotated UTM system that contains the information about which
           original pixel occupies which output pixel in the final product.
           Additionally, each pixel is sign-coded to indicate if it is real
           (indicated by a positive value) or a nearest-neighbor infill
           (indicated by negative values).

           The GLT file contains two parameters:
              1) sample number
              2) original line number

File type: BINARY 32-bit signed long integer.

Format:    Band interleaved by pixel

------------------------------------------------------------------------------

*rdn_VVV_glt.hdr  HEADER FILE FOR GEOMETRIC LOOKUP TABLE (GLT.HDR) DATA

Contents:  Format of each *rdn_VVV_glt file.  This file contains the number of
           lines, samples, channel, integer format, pixel size, scene
           elevation, UTM zone number and rotation angle information, etc.

File type: ASCII

-------------------------------------------------------------------------------

*rdn_VVV_igm  INPUT GEOMETRY FILE (IGM)

Contents:  UTM ground locations (x,y,elevation) in meters for each pixel in the corresponding
		   unorothcorrected radiance image. The IGM file data
           contain three parameters:
           1) Easting (meters)
           2) Northing (meters)
           3) Estimated ground elevation at each pixel center
              (reported in meters)

           No map correction or resampling is applied to the radiance image
           cube; the IGM file only reports the surface location of the
           unadjusted pixel centers.

File type: BINARY 32-bit signed long integer.

Units:     Band 1 - meters
           Band 2 - meters
           Band 3 - meters

Format:    Band interleaved by pixel

----------------------------------------------------------------------------

*rdn_VVV_igm.hdr  HEADER FILE FOR INPUT GEOMETRY FILE (IGM) DATA

Contents:  Format of each *rdn_VVV_igm file.  This file contains the number of
           lines, samples, channel, integer format, etc.

File type: ASCII

----------------------------------------------------------------------------

*rdn_VVV_img CALIBRATED PRISM RADIANCE (IMAGE) DATA

Contents:  PRISM calibrated radiance

File type: BINARY 32-bit big-endian floating point Intel.

Units:     microwatts per centimeter_squared per nanometer per steradian

Format:    Band interleaved by line

--------------------------------------------------------------------------------

*rdn_VVV_img.hdr HEADER FILE FOR CALIBRATED PRISM RADIANCE (IMAGE) DATA

Contents:  Format of each PRISM calibrated radiance scene.  This file contains
           the number of lines, samples, channel, etc. It also records the
           spectral calibration (wavelength and full-width at half-maximum
           value) for every channel in the radiance data.

File type: ASCII

----------------------------------------------------------------------------

*rdn_VVV_loc   PIXEL LOCATION DATA (LOC)

Contents:  Pixel locations (WGS-84 lat/lon) for each science pixel in the corresponding
           unorthocorrected radiance image. The LOC file data
           contain three parameters:
           1) WGS-84 longitude (decimal degrees)
           2) WGS-84 latitude (decimal degrees)
           3) Estimated ground elevation at each pixel center
              (reported in meters)

File type: BINARY 64-bit double-precision, floating point.

Units:     Band 1: decimal degrees
           Band 2: decimal degrees
           Band 3: meters

Format:    Band interleaved by line

--------------------------------------------------------------------------------

*rdn_VVV_loc.hdr 	HEADER FILE FOR PIXEL LOCATION DATA (LOC)

Contents:  Format of each PRISM *loc file.  This file contains the
           number of lines, samples, channel, etc.

File type: ASCII

----------------------------------------------------------------------------

*rdn_VVV_obs   OBSERVATION PARAMTER FILE (OBS)

Contents:  Observation parameter files in the raw spatial format; matches the corresponding
           unorthocorrected radiance image. The OBS file data
           contain eleven parameters:
           1) path length (sensor-to-ground in meters)
           2) to-sensor-azimuth (0 to 360 degrees clockwise from N)
           3) to-sensor-zenith (0 to 90 degrees from zenith)
           4) to-sun-azimuth (0 to 360 degrees clockwise from N)
           5) to-sun-zenith (0 to 90 degrees from zenith)
           6) solar phase (degrees between to-sensor and to-sun vectors in principal plane)
           7) slope (local surface slope as derived from DEM in degrees)
           8) aspect (local surface aspect 0 to 360 degrees clockwise from N)
           9) cosine i (apparent local illumination factor based on DEM slope and aspect
           	and to sun vector, -1 to 1)
          10) UTC time (decimal hours for mid-line pixels)
          11) Earth-sun distance (AU)

File type: BINARY 64-bit double-precision, floating point.

Format:    Band interleaved by pixel

--------------------------------------------------------------------------------

*rdn_VVV_obs.hdr 	OBSERVATION PARAMETER FILE (OBS)

Contents:  Format of each PRISM *obs file.  This file contains the
           number of lines, samples, channel, etc.

File type: ASCII

----------------------------------------------------------------------------

*rdn_VVV_obs_ort   ORTHOCORRECTED OBSERVATION PARAMTER FILE (OBS ORT)

Contents:  Observation parameter file that has been rendered using the GLT lookup table and
	   matches the orthocorrected imagery. The OBS ORT file data
           contain eleven parameters:
           1) path length (sensor-to-ground in meters)
           2) to-sensor-azimuth (0 to 360 degrees clockwise from N)
           3) to-sensor-zenith (0 to 90 degrees from zenith)
           4) to-sun-azimuth (0 to 360 degrees clockwise from N)
           5) to-sun-zenith (0 to 90 degrees from zenith)
           6) solar phase (degrees between to-sensor and to-sun vectors in principal plane)
           7) slope (local surface slope as derived from DEM in degrees)
           8) aspect (local surface aspect 0 to 360 degrees clockwise from N)
           9) cosine i (apparent local illumination factor based on DEM slope and aspect
           	and to sun vector, -1 to 1)
          10) UTC time (decimal hours for mid-line pixels)
          11) Earth-sun distance (AU)

File type: BINARY 64-bit double-precision, floating point.

Format:    Band interleaved by pixel

--------------------------------------------------------------------------------

*rdn_VVV_obs_ort.hdr 	ORTHOCORRECTED OBSERVATION PARAMETER FILE (OBS ORT)

Contents:  Format of each PRISM *obs_ort file.  This file contains the
           number of lines, samples, channel, etc.

File type: ASCII

----------------------------------------------------------------------------

*corr_VVV_img     CALIBRATED AVIRIS-NG REFLECTANCE (IMAGE) DATA

Contents:  AVIRIS-NG calibrated reflectance

File type: BINARY 32-bit little-endian floating point IEEE.

Units:     Apparent surface reflectance (Gao et al., 1993)

Format:    Band interleaved by line

--------------------------------------------------------------------------------

*corr_VVV_img.hdr   HEADER FILE FOR CALIBRATED AVIRIS REFLECTANCE (IMAGE) DATA

Contents:  Format of each AVIRIS calibrated radiance scene.  This file contains
           the number of lines, samples, channel, etc. It also records the
           spectral calibration (wavelength and full-width at half-maximum
           values) for every channel in the radiance data. The "Smoothing
           factors" field contains a list of multiplicative coefficients
           applied to smooth the resulting reflectance spectrum.  These
           coefficients were derived from Calibration measurements using
           spectrally-invariant surface targets. To remove this correction
           simply divide the apparent reflectance by these values.

File type: ASCII

----------------------------------------------------------------------------

*h2o_VVV   WATER ABSORPTION PATH (IMAGE) DATA

Contents:  Retrieved column water vapor and optical absorption paths for liquid
           H2O and ice

File type: BINARY 32-bit little-endian floating point IEEE.

Units:     Band 1: Retrieved column H2O vapor in cm
           Band 2: Total liquid H2O absorption path in cm
           Band 3: Total ice absorption path in cm

Format:    Band interleaved by line

--------------------------------------------------------------------------------

*h2o_VVV.hdr HEADER FILE FOR WATER ABSORPTION PATH (IMAGE) DATA

Contents:  Format of each AVIRIS-NG H2O cene.  This file contains the
           number of lines, samples, channel, etc.

File type: ASCII


--------------------------------------------------------------------------------
REFERENCES
--------------------------------------------------------------------------------

Gao, B.C., K. H. Heidebrecht, and A. F. H. Goetz, Derivation of scaled surface
    reflectances from AVIRIS data, Remote Sens. Env., 44, 165-178, 1993


--------------------------------------------------------------------------------
ACKNOWLEDGEMENTS
--------------------------------------------------------------------------------

This research was performed at the Jet Propulsion Laboratory, California
Institute of Technology, under contract with the National Aeronautics and
Space Administration (NASA).  We are grateful for the help and assistance of
colleagues including Bo-Cai Gao (NRL), Ian McCubbin (JPL), Dar Roberts (UCSB),
Mark Helmlinger (JPL), Scott Nolte (JPL), Ernie Diaz (JPL), Daniel Nunes (JPL),
Yasha Mouradi (JPL), and the rest of the AVIRIS-NG team. Copyright 2014
California Institute of Technology.  All Rights Reserved.  U.S. Government
Support Acknowledged.

--------------------------------------------------------------------------------
MODIFICATIONS
--------------------------------------------------------------------------------
10 Sept. 2014 (D. R. Thompson) - Initial document
25 July 2016 (S. R. Lundeen) - Revision to orthorectified data products
13 Oct. 2016 (S. R. Lundeen) - Added obs_ort file description

**** files dir
#+begin_src R :results none
aviris.2016.dir <- str_c(madison.aviris.dir,"2016/")
#+end_src

#+RESULTS:

**** files base


#+begin_src R :results none
                        aviris.2016.base.names <- c("ang20160831t203020",
                                                    "ang20160823t205253",
                                                    "ang20160823t205715",
                                                    "ang20160823t210147",
                                                    "ang20160822t191110",
                                                    "ang20160822t191820",
                                                    "ang20160822t192414",
                                                    "ang20160822t193312",
                                                    "ang20160822t194140",
                                                    "ang20160831t193735",
                                                    "ang20160831t194559",
                                                    "ang20160831t201002",
                                                    "ang20160831t201609")
#+end_src

**** image paths
#+begin_src R
aviris.2016.image.paths <- str_c(aviris.2016.dir, aviris.2016.base.names, "_rfl_v1n2/", aviris.2016.base.names, "_corr_v1n2_img")
aviris.2016.image.paths
#+end_src

#+RESULTS:
#+begin_example

[1] "/Volumes/data_erker/aviris_madison/2016/ang20160831t203020_rfl_v1n2/ang20160831t203020_corr_v1n2_img"
 [2] "/Volumes/data_erker/aviris_madison/2016/ang20160823t205253_rfl_v1n2/ang20160823t205253_corr_v1n2_img"
 [3] "/Volumes/data_erker/aviris_madison/2016/ang20160823t205715_rfl_v1n2/ang20160823t205715_corr_v1n2_img"
 [4] "/Volumes/data_erker/aviris_madison/2016/ang20160823t210147_rfl_v1n2/ang20160823t210147_corr_v1n2_img"
 [5] "/Volumes/data_erker/aviris_madison/2016/ang20160822t191110_rfl_v1n2/ang20160822t191110_corr_v1n2_img"
 [6] "/Volumes/data_erker/aviris_madison/2016/ang20160822t191820_rfl_v1n2/ang20160822t191820_corr_v1n2_img"
 [7] "/Volumes/data_erker/aviris_madison/2016/ang20160822t192414_rfl_v1n2/ang20160822t192414_corr_v1n2_img"
 [8] "/Volumes/data_erker/aviris_madison/2016/ang20160822t193312_rfl_v1n2/ang20160822t193312_corr_v1n2_img"
 [9] "/Volumes/data_erker/aviris_madison/2016/ang20160822t194140_rfl_v1n2/ang20160822t194140_corr_v1n2_img"
[10] "/Volumes/data_erker/aviris_madison/2016/ang20160831t193735_rfl_v1n2/ang20160831t193735_corr_v1n2_img"
[11] "/Volumes/data_erker/aviris_madison/2016/ang20160831t194559_rfl_v1n2/ang20160831t194559_corr_v1n2_img"
[12] "/Volumes/data_erker/aviris_madison/2016/ang20160831t201002_rfl_v1n2/ang20160831t201002_corr_v1n2_img"
[13] "/Volumes/data_erker/aviris_madison/2016/ang20160831t201609_rfl_v1n2/ang20160831t201609_corr_v1n2_img"
#+end_example

**** Save RGB
#+begin_src R
      img.2016 <- sapply(aviris.2016.image.paths, FUN = brick)

    foreach(img = img.2016) %do% {
        f.n <- img@file@name
        r <- img[[c(56,32,18)]]
        writeRaster(r, filename = paste0(f.n, "_rgb.envi"), overwrite = T)
  }
#+end_src



**** plot
#+begin_src R
  aviris.2016.rgb.paths <- str_c(aviris.2016.dir, aviris.2016.base.names, "_rfl_v1n2/", aviris.2016.base.names, "_corr_v1n2_img_rgb.envi")
  img.2016 <- sapply(aviris.2016.rgb.paths, FUN = brick)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/quicklook_2016.png
  plotRGB(img.2016[[13]], 3, 2, 1, stretch = "lin", bgalpha = 0)
#+end_src

#+RESULTS:
[[file:../figs/quicklook_2016.png]]







